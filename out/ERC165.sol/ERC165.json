{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin/\",\":@prb/test/=lib/prb-test/src/\",\":@tableland/evm/=lib/evm-tableland/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":evm-tableland/=lib/evm-tableland/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/contracts/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x79b8b95a610c8823997c639f22dc502a64047a042f62c58b6feb04a82668a8f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30644b34d99b7031c71f6988fcc67cdca98dbad285f27f9e99b5d1fa63323c69\",\"dweb:/ipfs/QmTapMESvnHMBkkkdkEefTyP87jXoNitV5U8nNHxLWEWEQ\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xfcc9759dead7965c69d4c7916e53d23d236d696465b890ca65e4ecdee8ad9812\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://393550054d90396dc6cbf7ac9f3d7ef3855c09cf63694992317842f97bf5eda9\",\"dweb:/ipfs/QmPQD1gmLAigP23AoPnVUe1n6vwCzcHDwFrqdqa59nik7D\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin/",
        "@prb/test/=lib/prb-test/src/",
        "@tableland/evm/=lib/evm-tableland/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "evm-tableland/=lib/evm-tableland/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin/=lib/openzeppelin/contracts/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/openzeppelin/contracts/utils/introspection/ERC165.sol": "ERC165"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x79b8b95a610c8823997c639f22dc502a64047a042f62c58b6feb04a82668a8f8",
        "urls": [
          "bzz-raw://30644b34d99b7031c71f6988fcc67cdca98dbad285f27f9e99b5d1fa63323c69",
          "dweb:/ipfs/QmTapMESvnHMBkkkdkEefTyP87jXoNitV5U8nNHxLWEWEQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xfcc9759dead7965c69d4c7916e53d23d236d696465b890ca65e4ecdee8ad9812",
        "urls": [
          "bzz-raw://393550054d90396dc6cbf7ac9f3d7ef3855c09cf63694992317842f97bf5eda9",
          "dweb:/ipfs/QmPQD1gmLAigP23AoPnVUe1n6vwCzcHDwFrqdqa59nik7D"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/openzeppelin/contracts/utils/introspection/ERC165.sol",
    "id": 41457,
    "exportedSymbols": {
      "ERC165": [
        41456
      ],
      "IERC165": [
        41468
      ]
    },
    "nodeType": "SourceUnit",
    "src": "114:797:32",
    "nodes": [
      {
        "id": 41434,
        "nodeType": "PragmaDirective",
        "src": "114:24:32",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 41436,
        "nodeType": "ImportDirective",
        "src": "140:38:32",
        "nodes": [],
        "absolutePath": "lib/openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "./IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41457,
        "sourceUnit": 41469,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41435,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41468,
              "src": "148:7:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41456,
        "nodeType": "ContractDefinition",
        "src": "659:251:32",
        "nodes": [
          {
            "id": 41455,
            "nodeType": "FunctionDefinition",
            "src": "762:146:32",
            "nodes": [],
            "body": {
              "id": 41454,
              "nodeType": "Block",
              "src": "844:64:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 41452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41447,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41442,
                      "src": "861:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 41449,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41468,
                            "src": "881:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$41468_$",
                              "typeString": "type(contract IERC165)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$41468_$",
                              "typeString": "type(contract IERC165)"
                            }
                          ],
                          "id": 41448,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "876:4:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 41450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "876:13:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$41468",
                          "typeString": "type(contract IERC165)"
                        }
                      },
                      "id": 41451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "890:11:32",
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "876:25:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "861:40:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 41446,
                  "id": 41453,
                  "nodeType": "Return",
                  "src": "854:47:32"
                }
              ]
            },
            "baseFunctions": [
              41467
            ],
            "documentation": {
              "id": 41440,
              "nodeType": "StructuredDocumentation",
              "src": "701:56:32",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "771:17:32",
            "parameters": {
              "id": 41443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41442,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "796:11:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 41455,
                  "src": "789:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 41441,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "788:20:32"
            },
            "returnParameters": {
              "id": 41446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41455,
                  "src": "838:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41444,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:6:32"
            },
            "scope": 41456,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 41438,
              "name": "IERC165",
              "nameLocations": [
                "687:7:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41468,
              "src": "687:7:32"
            },
            "id": 41439,
            "nodeType": "InheritanceSpecifier",
            "src": "687:7:32"
          }
        ],
        "canonicalName": "ERC165",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 41437,
          "nodeType": "StructuredDocumentation",
          "src": "180:478:32",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41456,
          41468
        ],
        "name": "ERC165",
        "nameLocation": "677:6:32",
        "scope": 41457,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 32
}